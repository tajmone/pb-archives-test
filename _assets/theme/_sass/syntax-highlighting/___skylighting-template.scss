/*
    ==============================================================================
                         Bare-Bones Pandoc Highlighting Theme                     
    ==============================================================================
    "bare-bones.scss" v2.0 (2017-11-16) | pandoc v2.0.2 | by Tristano Ajmone

    This Sass template emulates the definitions and structure of pandoc's (v2.x)
    built-in CSS styles (skylighting themes for syntax highlighting).
    
    All possible syntax tokens are covered.
    
    Use it as a starting point for your custom themes: adjust it to your needs and
    delete tokens that don't apply to the language/syntax you're targeting.

    Released into the public domain according to the Unlicense terms:

        http://unlicense.org/
    
    Credits and mentioning are not mandatory -- but they'd be highly appreciated!
    ------------------------------------------------------------------------------
*/
div.sourceLine,
a.sourceLine {
	display: inline-block;
	min-height: 1.25em;
}

a.sourceLine {
	pointer-events: none;
	color: inherit;
	text-decoration: inherit;
}

.sourceCode {
	overflow: visible;
}

code.sourceCode {
	white-space: pre;
}

@media print {
	code.sourceCode {
		white-space: pre-wrap;
	}
	
	div.sourceLine, a.sourceLine {
		text-indent: -1em;
		padding-left: 1em;
	}
}

pre.numberSource div.sourceLine,
.numberSource a.sourceLine {
	position: relative;
}

pre.numberSource div.sourceLine::before,
.numberSource a.sourceLine::before {
	content: attr(data-line-number);
	position: absolute;
	left: -5em;
	text-align: right;
	vertical-align: baseline;
	border: none;
	pointer-events: all;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	padding: 0 4px;
	width: 4em;
}

pre.numberSource {
	margin-left: 3em;
	border-left: 1px solid #bdae9d;
	background-color: #2a211c;
	color: #bdae9d;
	padding-left: 4px;
}

pre, code {
	color: #bdae9d;
	background-color: #2a211c;
}

@media screen {
	a.sourceLine::before {
		text-decoration: underline;
		color: initial;
	}
}

code {
	& span {
		&.al { /* Alert */
			color: #000000;
		}
		&.an { /* Annotation */
			color: #000000;
		}
		&.at { /* Attribute */
			color: #000000;
		}
		&.bn { /* BaseN */
			color: #000000;
		}
		&.bu { /* BuiltIn */
			color: #000000;
		}
		&.cf { /* ControlFlow */
			color: #000000;
		}
		&.ch { /* Char */
			color: #000000;
		}
		&.cn { /* Constant */
			color: #000000;
		}
		&.co { /* Comment */
			color: #000000;
		}
		&.cv { /* CommentVar */
			color: #000000;
		}
		&.do { /* Documentation */
			color: #000000;
		}
		&.dt { /* DataType */
			color: #000000;
		}
		&.dv { /* DecVal */
			color: #000000;
		}
		&.er { /* Error */
			color: #000000;
		}
		&.ex { /* Extension */
			color: #000000;
		}
		&.fl { /* Float */
			color: #000000;
		}
		&.fu { /* Function */
			color: #000000;
		}
		&.im { /* Import */
			color: #000000;
		}
		&.in { /* Information */
			color: #000000;
		}
		&.kw { /* Keyword */
			color: #000000;
		}
		&.op { /* Operator */
			color: #000000;
		}
		&.ot { /* Other */
			color: #000000;
		}
		&.pp { /* Preprocessor */
			color: #000000;
		}
		&.re { /* RegionMarker */
			color: #000000;
		}
		&.sc { /* SpecialChar */
			color: #000000;
		}
		&.ss { /* SpecialString */
			color: #000000;
		}
		&.st { /* String */
			color: #000000;
		}
		&.va { /* Variable */
			color: #000000;
		}
		&.vs { /* VerbatimString */
			color: #000000;
		}
		&.wa { /* Warning */
			color: #000000;
		}
	}
}

 